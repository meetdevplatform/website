import { Component, EventEmitter, OnInit, Output } from '@angular/core';
import { UIFunctions } from '../../functions/ui-functions';
declare var anime: any;

@Component({
  selector: 'theme-toggler',
  templateUrl: './theme-toggler.component.html',
  styleUrls: ['./theme-toggler.component.scss']
})
export class ThemeTogglerComponent implements OnInit {

  constructor(public ui: UIFunctions) { }

  moonPath =
    "M18 27.5C18 42.6878 27.5 55 27.5 55C12.3122 55 0 42.6878 0 27.5C0 12.3122 12.3122 0 27.5 0C27.5 0 18 12.3122 18 27.5Z";
  circlePath =
    "M55 27.5C55 42.6878 42.6878 55 27.5 55C12.3122 55 0 42.6878 0 27.5C0 12.3122 12.3122 0 27.5 0C42.6878 0 55 12.3122 55 27.5Z";

  moonSvg = [
    {
      value: "M55 27.5C55 42.6878 42.6878 55 27.5 55C12.3122 55 0 42.6878 0 27.5C0 12.3122 12.3122 0 27.5 0C42.6878 0 55 12.3122 55 27.5Z"
    }
  ]

  circleSvg = [
    { value: "M181.999 91.3312C164.064 91.3293 146.532 96.6458 131.619 106.608C116.706 116.571 105.082 130.732 98.2174 147.301C91.3529 163.87 89.5558 182.102 93.0535 199.693C96.5513 217.283 105.187 233.441 117.868 246.123C130.549 258.806 146.706 267.443 164.296 270.942C181.886 274.442 200.118 272.647 216.688 265.784C233.257 258.921 247.42 247.299 257.384 232.387C267.348 217.475 272.666 199.943 272.666 182.008C272.64 157.969 263.08 134.921 246.082 117.922C229.085 100.923 206.038 91.3598 181.999 91.3312Z" },
    { value: "M181.999 64.6793C177.308 64.6799 172.809 62.8173 169.492 59.5011C166.174 56.1849 164.31 51.6868 164.308 46.9961V18.6902C164.308 13.9982 166.172 9.49827 169.49 6.18048C172.808 2.86269 177.308 0.998779 182 0.998779C186.692 0.998779 191.192 2.86269 194.51 6.18048C197.827 9.49827 199.691 13.9982 199.691 18.6902V46.9961C199.689 51.6868 197.824 56.1846 194.506 59.5005C191.188 62.8165 186.689 64.6793 181.999 64.6793Z" },
    { value: "M181.999 299.313C177.307 299.313 172.807 301.177 169.49 304.495C166.172 307.812 164.308 312.312 164.308 317.004V345.3C164.308 349.992 166.172 354.492 169.49 357.81C172.808 361.128 177.308 362.992 182 362.992C186.692 362.992 191.192 361.128 194.51 357.81C197.827 354.492 199.691 349.992 199.691 345.3V317.004C199.69 312.312 197.826 307.813 194.508 304.495C191.19 301.178 186.691 299.314 181.999 299.313Z" },
    { value: "M264.947 99.0435C261.633 95.7244 259.771 91.2257 259.771 86.5351C259.771 81.8446 261.633 77.3458 264.947 74.0268L284.964 54.0097C288.292 50.7437 292.775 48.9238 297.438 48.9458C302.101 48.9677 306.566 50.8298 309.864 54.1269C313.161 57.4241 315.023 61.8897 315.045 66.5525C315.067 71.2153 313.247 75.6983 309.981 79.0264L289.966 99.0411C288.324 100.684 286.374 101.988 284.227 102.878C282.081 103.767 279.78 104.225 277.457 104.225C275.134 104.225 272.833 103.768 270.687 102.879C268.54 101.99 266.59 100.686 264.947 99.0435Z" },
    { value: "M99.0411 264.963C97.3995 263.319 95.4498 262.014 93.3035 261.124C91.1572 260.234 88.8564 259.776 86.5328 259.776C84.2092 259.776 81.9084 260.234 79.762 261.124C77.6157 262.014 75.666 263.319 74.0244 264.963L54.0096 284.962C50.691 288.278 48.8258 292.778 48.8245 297.47C48.8232 302.162 50.6858 306.662 54.0026 309.981C57.3194 313.299 61.8187 315.165 66.5106 315.166C71.2026 315.167 75.703 313.305 79.0216 309.988L99.0364 289.964C100.679 288.323 101.983 286.375 102.872 284.23C103.762 282.085 104.22 279.786 104.22 277.464C104.221 275.143 103.763 272.843 102.875 270.698C101.986 268.553 100.683 266.605 99.0411 264.963Z" },
    { value: "M299.314 181.999C299.314 177.307 301.177 172.808 304.495 169.49C307.812 166.172 312.312 164.309 317.004 164.309H345.307C347.647 164.282 349.969 164.719 352.139 165.596C354.308 166.473 356.282 167.771 357.946 169.416C359.61 171.061 360.931 173.02 361.833 175.179C362.735 177.339 363.199 179.655 363.199 181.995C363.199 184.335 362.735 186.652 361.833 188.811C360.931 190.971 359.61 192.929 357.946 194.575C356.282 196.22 354.308 197.518 352.139 198.395C349.969 199.272 347.647 199.709 345.307 199.682H317.004C314.681 199.683 312.381 199.226 310.235 198.338C308.088 197.45 306.138 196.147 304.495 194.505C302.852 192.863 301.549 190.913 300.66 188.768C299.771 186.622 299.314 184.322 299.314 181.999Z" },
    { value: "M64.6793 181.999C64.6793 179.676 64.2217 177.375 63.3327 175.229C62.4437 173.083 61.1406 171.133 59.4979 169.49C57.8552 167.847 55.9051 166.544 53.7588 165.655C51.6125 164.766 49.3122 164.309 46.989 164.309H18.6903C16.3504 164.282 14.0285 164.719 11.859 165.596C9.68947 166.473 7.71547 167.771 6.05134 169.416C4.38722 171.061 3.06604 173.02 2.16434 175.179C1.26264 177.339 0.79834 179.655 0.79834 181.995C0.79834 184.335 1.26264 186.652 2.16434 188.811C3.06604 190.971 4.38722 192.929 6.05134 194.575C7.71547 196.22 9.68947 197.518 11.859 198.395C14.0285 199.272 16.3504 199.709 18.6903 199.682H46.9961C49.3184 199.682 51.618 199.225 53.7635 198.337C55.9091 197.448 57.8586 196.146 59.5007 194.504C61.1428 192.861 62.4453 190.912 63.3339 188.766C64.2224 186.621 64.6796 184.321 64.6793 181.999Z" },
    { value: "M264.947 264.964C268.266 261.649 272.765 259.788 277.455 259.788C282.146 259.788 286.645 261.649 289.964 264.964L309.979 284.978C313.239 288.307 315.054 292.789 315.03 297.448C315.005 302.108 313.143 306.57 309.848 309.864C306.552 313.159 302.09 315.02 297.43 315.043C292.77 315.066 288.29 313.25 284.962 309.988L264.947 289.973C263.304 288.332 262.001 286.382 261.112 284.237C260.223 282.091 259.765 279.791 259.765 277.469C259.765 275.146 260.223 272.846 261.112 270.7C262.001 268.555 263.304 266.605 264.947 264.964Z" },
    { value: "M99.0433 99.0459C100.686 97.4034 101.989 95.4533 102.878 93.3071C103.768 91.1609 104.225 88.8606 104.225 86.5375C104.225 84.2144 103.768 81.9141 102.878 79.7679C101.989 77.6217 100.686 75.6717 99.0433 74.0292L79.0215 54.0191C75.6859 50.7955 71.2175 49.0112 66.579 49.0507C61.9405 49.0902 57.5031 50.9503 54.2229 54.2302C50.9427 57.5101 49.0822 61.9473 49.0423 66.5858C49.0024 71.2243 50.7862 75.6929 54.0095 79.0287L74.0243 99.0435C75.6657 100.689 77.6155 101.994 79.762 102.884C81.9084 103.775 84.2094 104.233 86.5333 104.234C88.8572 104.234 91.1583 103.776 93.3049 102.885C95.4516 101.995 97.4016 100.691 99.0433 99.0459Z" }
  ];


  ngOnInit(): void {
    console.log("Init Theme Switch - is Dark", this.ui.isDark);
    this.morphTo(anime.timeline({
      duration: 750,
      easing: "easeOutExpo"
    }), !this.ui.isDark);
  }

  toggleSwitch(){
  const timeline = anime.timeline({
        duration: 750,
        easing: "easeOutExpo"
      });

      this.morphTo(timeline, this.ui.isDark);
      this.ui.isDark = !this.ui.isDark;
      this.ui.toggleTheme();
  }


  morphTo(timeline: any, toggler: any) {
    console.log("Toggle Function - isDark ", !toggler);

    timeline
      .add({
        targets: ".circle",
        d: [{ value: toggler ? this.circlePath : this.moonPath }]
      })
      .add(
        {
          targets: "#darkMode",
          rotate: toggler ? 40 : 320
        },
        "-=700"
      ).add(
        {
          targets: ".circle",
          fill: toggler ? "#FFC700" : "#cccccc"
        }, "-=750"
      );
  }

}
