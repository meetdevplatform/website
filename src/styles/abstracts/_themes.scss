$theme-bg: 'theme-bg';
$theme-text: 'theme-text';
$theme-color-primary: 'theme-color-primary';
$theme-color-secondary: 'theme-color-secondary';
$theme-color-gray:'theme-color-gray';
$theme-border-100: 'theme-border-100';
$theme-border-200: 'theme-border-200';
$theme-icon-filter : 'theme-icon-filter';

$themes: (
  light: (
    theme-bg: $white,
    theme-text: $black,
    theme-color-primary: $color-primary,
    theme-color-secondary: $color-secondary,
    theme-color-gray:$gray-bg,
    theme-border-100: $gray-100,
    theme-border-200: $gray-200,
    theme-icon-filter: brightness(0),
  ),
  dark: (
    theme-bg: $bg-dark,
    theme-text: $white,
    theme-color-primary: $color-primary-dark,
    theme-color-secondary: $color-secondary-dark,
    theme-color-gray:$gray-bg-dark,
    theme-border-100: $gray-100-dark,
    theme-border-200: $gray-200-dark,
    theme-icon-filter: 'brightness(0) invert(1)'
  ),
);

@mixin themify($themes: $themes) {
    @each $theme, $map in $themes {
  
       .theme-#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
  
        @content;
        $theme-map: null !global;
      }
  
    }
  }
  
  @function t($key) {
    @return map-get($theme-map, $key);
  }